High Priority
=============
- Autogenerate makefile dependencies
- Pass things by reference when possible
- Make a distinction between the mouse interfact and sim interface
- Sim code should match the bot code *exactly*

Medium Priority
===============
- Ensure that any file can be loaded regardless of maze size specification - output an error
- Make terminal style output at bottom or right of window
- Display another window of the robot's perception
- Make the shortest path look a little better

Low Priority
===============
- Make the mouse look prettier (draw black box around, or something)
- Handle the case when target tile is unreachable - it just crashes right now
- Ensure that all tiles are reachable in a randomly generated maze
- Ensure that the maze conforms to the spec as outlined in the rules
- The getClosestCenterTile() method in the Maze class only returns one center
  tile, even if two or more of them are equally close to the start - thus sometimes
  a valid shortest path is not indicated on the maze

Long Term
=========
- Make this a more realistic simulation by allowing angles, adding sensors, etc.
