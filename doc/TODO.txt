High Priority
=============
- Collision Detection
- Parser classes for mouse and maze
- Synchronization documentation between the World, Graphics, and Mouse 
- Make Sensor and Motor abstract, support different types
- Change float to units (including in the ParamParser and Param class)
- Maze Validation (both physically valid mazes and competition valid mazes)

Medium Priority
===============
- New maze w/o restarting app
- Make a distinction between the mouse interface and sim interface
- Ensure that any file can be loaded regardless of maze size specification
- Make terminal style output at bottom or right of window
- Display another window of the robot's perception
- Shortest path graphic
- Rewrite the Makefile to use an "inc" directory
- XML file for algorithm choice
- Indicator of sim speed
- Support more than two wheels
- Sim code should match the bot code as closely as possible
- Dual screen! (mini-map and zoomed-in view - 1x1, 3x3, relative and absolute rotation)

Low Priority
===============
- Pass things by reference when possible
- Figure out how the discrete and continuous interfaces can coexist
- Sprinkle Assertions everywhere
- Make the mouse look prettier (draw black box around, or something)
- Handle the case when target tile is unreachable - it just crashes right now
- Validate the coding standards (especially "{" placement)
- Rewrite "i++" as "++i" or "i += 1"
